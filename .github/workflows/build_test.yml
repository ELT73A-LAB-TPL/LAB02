# This is a basic workflow to help you get started with Actions

name: CMake Build Test in all Folders

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Verify Folders Exist
        run: |
          FOLDERS=$(ls -d */ 2>/dev/null || echo "")
          if [ -z "$FOLDERS" ]; then
            echo "Error: No project folders found!"
            exit 1
          fi
        shell: bash
        
      - name: Install arm-none-eabi-gcc GNU Arm Embedded Toolchain
        uses: carlosperate/arm-none-eabi-gcc-action@v1.9.1

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@v3

      - name: Find All Folders and Configure CMake Build ${{env.BUILD_TYPE}}
        run: |
          for dir in */ ; do
            dir=${dir%/}  # Remove trailing slash for cleaner folder names
            echo "Processing folder: $dir"            
            cmake -B "$GITHUB_WORKSPACE/$dir/build" -DCMAKE_BUILD_TYPE="${{ env.BUILD_TYPE }}"
            cmake --build "$GITHUB_WORKSPACE/$dir/build" --config "${{ env.BUILD_TYPE }}"
          done
        shell: bash     
  
